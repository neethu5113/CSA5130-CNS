// Input: Keyword = CIPHER, Plaintext = HELLO
// Output: Encrypted: ITSSG
#include <stdio.h>
#include <string.h>

void generateKey(char *keyword, char *keyMap) {
    int used[26] = {0}, k = 0;
    for (int i = 0; keyword[i]; i++) {
        if (!used[keyword[i] - 'A']) {
            keyMap[k++] = keyword[i];
            used[keyword[i] - 'A'] = 1;
        }
    }
    for (int i = 0; i < 26; i++) {
        if (!used[i]) keyMap[k++] = 'A' + i;
    }
}

void encrypt(char *pt, char *keyMap) {
    for (int i = 0; pt[i]; i++)
        if (pt[i] >= 'A' && pt[i] <= 'Z')
            pt[i] = keyMap[pt[i] - 'A'];
}

int main() {
    char pt[100] = "HELLO", keyMap[26];
    generateKey("CIPHER", keyMap);
    encrypt(pt, keyMap);
    printf("Encrypted: %s\n", pt);
    return 0;
}
